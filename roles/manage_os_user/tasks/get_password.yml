---

  - set_fact:
      _tmp_user_pw:
      _tmp_secret_type: pw


  - set_fact:
      _tmp_user_pw: >-
         {{ _iter_users.value.password.value }}
    no_log: true
    when: >-
      _iter_users.value.password.value is truthy or
      _iter_users.value.password.empty


  - block:

       ##
       ## note: we only need to know the old / current password when cycling
       ##   is disabled, so we can see if one exists already / reset it
       ##   during this ansible run instead of using a new one
       ##
     - name: try reading current password from source/sink
       include_tasks: handle_secret_sinks/main_read.yml
       when: >-
          _iter_users.value.password.autogen.cycle is falsy
          and _iter_users.value.password.save_to_sinks._read_cfg is truthy


     - name: create new random user password
       ansible.builtin.set_fact:
         _tmp_user_pw: >-
           {{ lookup('ansible.builtin.password', '/dev/null',
                 **_iter_users.value.password.autogen.config,
              )
           }}
       no_log: true
       when: >-
         _iter_users.value.password.autogen.cycle is truthy
         or _tmp_user_pw is falsy

    when: _iter_users.value.password.autogen.enabled is truthy


    ##
    ## note: we optionally also can sink-save non-autogenerated passwords
    ##   here, nothing wrong with it when the user wants it that way
    ##
  - name: collect new secrets for later saving
    include_tasks: handle_secret_sinks/main_collect_secrets.yml
    loop: "{{ _iter_users.value.password.save_to_sinks.sinks | dict2items }}"
    loop_control:
      loop_var: _iter_save_sinks


  - block:

      - name: check if password was succesfully read / generated
        ansible.builtin.assert:
          that:
            - _tmp_user_pw is truthy
          fail_msg: >-
            user password failed to be generated / read

      ## TODO: hashing is linux (distro? / version?) specific
      - name: hash user password
        set_fact:
          _tmp_user_pw: >-
            {{ _tmp_user_pw | ansible.builtin.password_hash('sha512') }}
        no_log: true

    when: >-
      not _iter_users.value.password.empty
      and not _iter_users.value.password.locked

